.assume_role: &assume_role
 - >
  STS=($(aws sts assume-role-with-web-identity
  --role-arn ${ROLE_ARN}
  --role-session-name "GitLabRunner-${CI_PROJECT_ID}-${CI_PIPELINE_ID}"
  --web-identity-token $ID_TOKEN
  --duration-seconds 3600
  --query 'Credentials.[AccessKeyId,SecretAccessKey,SessionToken]'
  --output text))
 - export AWS_ACCESS_KEY_ID="${STS[0]}"
 - export AWS_SECRET_ACCESS_KEY="${STS[1]}"
 - export AWS_SESSION_TOKEN="${STS[2]}"

stages:
 - build
 - test
 - deploy

build artifact:
 stage: build
 image: node:latest
 before_script:
  - npm install
 script:
  - npm run build
 artifacts:
  paths:
   - dist/
  when: always
 rules:
  - if: '$CI_COMMIT_REF_NAME == "main"'
    when: always

deploy s3:
 stage: deploy
 image:
  name: amazon/aws-cli:latest
  entrypoint:
   - "/usr/bin/env"
 id_tokens:
  ID_TOKEN:
   aud: react_s3_gl
 script:
  - *assume_role
  - aws s3 sync disk/ s3://$S3_BUCKET
 rules:
  - if: '$CI_COMMIT_REF_NAME == "main"'
    when: always
